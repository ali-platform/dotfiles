#!/usr/bin/env bash
set -e

echo ''
echo -e "\e[1;36m------\e[0m"
echo -e "\e[1;36mUpdate apt\e[0m"
sudo DEBIAN_FRONTEND=noninteractive apt-get -yq update


echo ''
echo -e "\e[1;36m------\e[0m"
echo -e "\e[1;36mUpgrade packages from apt\e[0m"
sudo DEBIAN_FRONTEND=noninteractive apt-get --yes -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade
echo ''


echo ''
echo -e "\e[1;36m------\e[0m"
echo -e "\e[1;36mClean up packages from apt\e[0m"
sudo DEBIAN_FRONTEND=noninteractive apt-get --yes -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" auto-remove
echo ''


echo ''
echo -e "\e[1;36m------\e[0m"
echo -e "\e[1;36mRefreshing snaps\e[0m"
sudo snap refresh

arch=$(dpkg --print-architecture)

echo ''
echo -e "\e[1;36m------\e[0m"
echo -e "\e[1;36mInstalling PowerShell from download\e[0m"
available_version=$(curl -s "https://api.github.com/repos/PowerShell/PowerShell/releases/latest" | jq -r .tag_name | sed 's/v//')
installed_version=$(pwsh --version 2>/dev/null | grep -oP '(\d+\.)+\d+') || true
if [ "$available_version" != "$installed_version" ]; then
    # Powershell downloads don't follow linux arch naming conventions
    if [ "$arch" == "arm64" ]; then
        ps_arch="arm64"
    else
        ps_arch="x64"
    fi
    download_url=$(curl -s "https://api.github.com/repos/PowerShell/PowerShell/releases/latest" | jq -r ".assets[] | select(.name | test(\"linux-$ps_arch.tar\")) | .browser_download_url")
    curl -L $download_url -o /tmp/powershell.tar.gz
    sudo mkdir -p /opt/microsoft/powershell/7
    sudo tar zxf /tmp/powershell.tar.gz -C /opt/microsoft/powershell/7
    sudo chmod +x /opt/microsoft/powershell/7/pwsh
    sudo ln -s --force /opt/microsoft/powershell/7/pwsh /usr/bin/pwsh
    rm /tmp/powershell.tar.gz


pwsh -NoProfile -Command - <<'EOF'
Set-PSResourceRepository -Name PSGallery -Trusted

Install-PSResource AWS.Tools.Installer -Reinstall
Install-AWSToolsModule AWS.Tools.SecurityToken,AWS.Tools.SSO,AWS.Tools.SSOOIDC,AWS.Tools.EC2,AWS.Tools.S3,AWS.Tools.SimpleNotificationService,AWS.Tools.SQS,AWS.Tools.DynamoDBv2 -CleanUp -Force

Install-PSResource PSReadLine -Reinstall
Install-PSResource Powershell-yaml -Reinstall
Install-PSResource posh-git -Reinstall
Install-PSResource PowerShellForGitHub -Reinstall
Install-PSResource ImportExcel -Reinstall
Install-PSResource Microsoft.Graph -Reinstall
cls
EOF

fi


echo ''
echo -e "\e[1;36m------\e[0m"
echo -e "\e[1;36mUpdating pulumi\e[0m"
export PATH=$PATH:$HOME/.local/bin:$HOME/.pulumi/bin
mkdir -p $HOME/.pulumi/workspaces
available_version=$(curl -s "https://api.github.com/repos/pulumi/pulumi/releases/latest" | jq -r .tag_name)
installed_version=$(pulumi version 2>/dev/null) || true
if [ "$available_version" != "$installed_version" ]; then
    curl -fsSL https://get.pulumi.com | sh
fi


echo ''
echo -e "\e[1;36m------\e[0m"
echo -e "\e[1;36mUpdating oh-my-posh\e[0m"
available_version=$(curl -s "https://api.github.com/repos/JanDeDobbeleer/oh-my-posh/releases/latest" | jq -r .tag_name | sed 's/v//')
installed_version=$(oh-my-posh --version 2>/dev/null) || true
if [ "$available_version" != "$installed_version" ]; then
    curl -s https://ohmyposh.dev/install.sh | bash -s
fi

echo ''
echo -e "\e[1;36m------\e[0m"
echo -e "\e[1;36mUpdating kustomize\e[0m"
download_url=$(curl -s "https://api.github.com/repos/kubernetes-sigs/kustomize/releases/latest" | jq -r ".assets[] | select(.content_type == \"application/x-gtar\") | select(.name | test(\"linux_$arch\")) | .browser_download_url")
curl -sL $download_url -o /tmp/kustomize.tar.gz
sudo tar -xvf /tmp/kustomize.tar.gz -C /usr/bin/ > /dev/null
sudo chmod +x /usr/bin/kustomize
rm /tmp/kustomize.tar.gz

echo ''
echo -e "\e[1;36m------\e[0m"
echo -e "\e[1;36mUpdating PowerShell Modules\e[0m"
pwsh -NoProfile -Command - <<'EOF'
Get-InstalledPSResource -ErrorAction:SilentlyContinue | ?{ $_.Name -ne 'Microsoft.PowerShell.PSResourceGet' } | %{ $_.Name } | Sort-Object | Get-Unique | %{ Update-PSResource $_ }
EOF

echo ''
echo -e "\e[1;32m------\e[0m"
echo -e "\e[1;32mTools Update Complete\e[0m"
